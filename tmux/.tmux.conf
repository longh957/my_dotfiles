# remap prefix to Control + a
unbind C-b
set -g prefix C-s
bind C-s send-prefix

###############
# TMUX SETTINGS
###############
set -g history-limit 100000
set -g default-terminal "screen-256color"
set -g repeat-time 0
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# status bar
set-option -g status-position top

# enable vim focus events
set -g focus-events on

# set mouse options
# set-option -g mouse-select-pane on
# set -g mouse-resize-pane on
# set-option -g mouse-select-window on
# set-window-option -g mode-mouse on
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# pane color option
set -g pane-border-fg black
set -g pane-active-border-fg blue

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

###############
# Fix Copy and Paste
###############
# Fix tmux copy issues
# need to brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# split window and fix path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

#synchronize all panes in a window
bind y setw synchronize-panes

# match pane movements to vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

###############
# KEY BINDINGS
###############
# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t -Tcopy-mode-vi Enter
# bind-key -t -Tcopy-mode-vi Enter copy-pipe

# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window


# TO VIEW KEYBINDINGS
# tmux list-keys -t vi-copy
#

# THEMES
# Uncomment to display music playing
tm_spotify="#[fg=$tm_color_music]#(osascript $DEV_DIR/dotfiles/applescripts/spotify.scpt)"
tm_itunes="#[fg=$tm_color_music]#(osascript $DEV_DIR/dotfiles/applescripts/itunes.scpt)"
set -g status-right $tm_itunes' '$tm_spotify
#
# Thyme integration
set-option -g status-right '#(cat ~/.thyme-tmux)'
set-option -g status-interval 1

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

###############
# POWERLINE
###############
# run-shell "powerline-daemon -q"
# if-shell 'env "$POWERLINE_CONFIG_COMMAND" tmux setup' '' 'run-shell "powerline-config tmux setup"'

# TMUX Plugin Manager Configuration
# List of plugins
# Supports `github_username/repo` or full git repo URLs
# prefix + I - To Install Plugins
# prefix + U - To update plugins
# prefix + alt + u - Uninstall unused plugins
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  jimeh/tmux-themepack             \
  nhdaly/tmux-scroll-copy-mode     \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \
set -g @themepack 'double/blue'
# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
